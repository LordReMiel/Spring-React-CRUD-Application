{"version":3,"sources":["logo.svg","Services/CourseDataService.js","Components/ListCourseComponent.jsx","Components/CourseComponent.jsx","Components/InstructorApp.jsx","App.js","index.js"],"names":["module","exports","INSTRUCTOR_API_URL","name","axios","get","id","delete","course","put","post","ListCourseComponent","props","state","courses","message","refreshCourses","bind","deleteCourseClicked","updateCourseClicked","addCourseClicked","this","CourseDataService","retrieveAllCourses","then","response","setState","data","deleteCourse","console","log","history","push","listOfCourses","map","key","description","username","className","onClick","class","React","Component","CourseComponent","match","params","onSubmit","validate","retrieveCourse","values","targetDate","createCourse","updatedCourse","errors","length","enableReinitialize","initialValues","validateOnBlur","validateOnChange","type","disabled","component","InstructorApp","path","exact","App","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7c4f5a36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\r\n\r\n\r\nconst INSTRUCTOR = 'Remiel'\r\nconst COURSE_API_URL ='http://localhost:8080'\r\nconst INSTRUCTOR_API_URL =`${COURSE_API_URL}/instructors/${INSTRUCTOR}`\r\n\r\n\r\n\r\nclass CourseDataService {\r\n\r\n    retrieveAllCourses(name) {\r\n\r\n        return axios.get(`${INSTRUCTOR_API_URL}/courses`);\r\n    }\r\n\r\n    deleteCourse(name, id) {\r\n\r\n        return axios.delete (`${INSTRUCTOR_API_URL}/courses/${id}`)\r\n    }\r\n\r\n\r\n    retrieveCourse(name, id) {\r\n\r\n        return axios.get (`${INSTRUCTOR_API_URL}/courses/${id}`);\r\n    }\r\n\r\n    updatedCourse(name, id, course) {\r\n\r\n        return axios.put(`${INSTRUCTOR_API_URL}/courses/${id}`, course);\r\n    }\r\n\r\n    createCourse(name, course) {\r\n\r\n        return axios.post(`${INSTRUCTOR_API_URL}/courses/`,course);\r\n    }\r\n}\r\n\r\nexport default new CourseDataService()","import React from 'react'\r\nimport CourseDataService from '../Services/CourseDataService';\r\n\r\n\r\n\r\nclass ListCourseComponent extends React.Component {\r\n\r\n            constructor(props){\r\n                super(props)\r\n\r\n                this.state = {\r\n\r\n                    courses:[],\r\n                    message: null\r\n                }\r\n\r\n                this.refreshCourses = this.refreshCourses.bind(this)\r\n                this.deleteCourseClicked = this.deleteCourseClicked.bind (this)\r\n                this.updateCourseClicked = this.updateCourseClicked.bind(this)\r\n                \r\n                this.addCourseClicked = this.addCourseClicked.bind(this)\r\n\r\n\r\n            }\r\n\r\n            componentDidMount(){\r\n\r\n                this.refreshCourses();\r\n\r\n            }\r\n\r\n            refreshCourses(){\r\n\r\n                CourseDataService.retrieveAllCourses(\"Remiel\")\r\n                    .then (\r\n                        response => { \r\n\r\n                            this.setState({courses: response.data})\r\n                        }\r\n                    )\r\n            }\r\n\r\n            deleteCourseClicked(id){\r\n\r\n             CourseDataService.deleteCourse(\"Remiel\", id)\r\n                .then (\r\n\r\n                    response => {\r\n\r\n                        this.setState({message:`Delete of course ${id} successful`})\r\n                        this.refreshCourses()\r\n                    }\r\n                )\r\n\r\n            }\r\n\r\n\r\n            updateCourseClicked(id) {\r\n                console.log('update ' + id)\r\n                this.props.history.push(`https://priceless-panini-9a249c.netlify.app//courses/${id}`)\r\n            }\r\n\r\n            addCourseClicked() {\r\n                this.props.history.push(`https://priceless-panini-9a249c.netlify.app//courses/-1`)\r\n            }\r\n\r\n    render(){\r\n\r\n        const listOfCourses = this.state.courses.map((course) =>\r\n\r\n        <tr key ={course.id}>\r\n            <td>{course.id}</td>\r\n            <td>{course.description}</td>\r\n            <td>{course.username}</td>\r\n            <td><button className=\"btn btn-warning\" onClick={() => this.updateCourseClicked(course.id)}>Update</button></td>\r\n            <td><button className=\"btn btn-danger\" onClick={() => this.deleteCourseClicked(course.id)}>Delete</button></td>\r\n            \r\n        </tr>\r\n        )\r\n        \r\n        return(\r\n\r\n            <div className= \"container\">\r\n\r\n                <h3>All Courses</h3>\r\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\r\n                    <div className=\"container\">\r\n\r\n                    <table className=\"table\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                            <th> Id</th>\r\n                            <th> Description</th>\r\n                            <th> Username </th>\r\n                            <th> Update </th>\r\n                            <th> Delete </th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n\r\n                        {    listOfCourses     }\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addCourseClicked}>Add</button>\r\n                    </div>\r\n\r\n                    </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ListCourseComponent;","import React from 'react'\r\nimport CourseDataService from '../Services/CourseDataService'\r\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\r\n\r\n\r\nclass CourseComponent extends React.Component {\r\n\r\n        constructor(props){\r\n\r\n            super(props)\r\n\r\n\r\n            this.state = {\r\n\r\n                id: this.props.match.params.id,\r\n                username:'',\r\n                description: ''\r\n            }\r\n\r\n            this.onSubmit = this.onSubmit.bind(this)\r\n            this.validate = this.validate.bind(this)\r\n            \r\n        }\r\n\r\n\r\n        componentDidMount() {\r\n\r\n            if (this.state.id === -1) {\r\n                return\r\n            }\r\n\r\n            CourseDataService.retrieveCourse(\"lA\", this.state.id)\r\n\r\n            .then(response => this.setState(\r\n                \r\n                {\r\n                username: response.data.username,\r\n                description: response.data.description\r\n            }))\r\n\r\n        }\r\n\r\n\r\n        onSubmit( values ){\r\n\r\n           \r\n\r\n            let course = {\r\n\r\n                id:this.state.id,\r\n                username:values.username,\r\n                description: values.description,\r\n                targetDate: values.targetDate\r\n            }\r\n\r\n            if (this.state.id === -1) {\r\n\r\n                CourseDataService.createCourse(this.state.username, course)\r\n                .then(() => this.props.history.push('/courses'))\r\n            }else{\r\n\r\n                CourseDataService.updatedCourse(this.state.username, this.state.id, course)\r\n                .then(() => this.props.history.push('/courses'))\r\n            }\r\n        }\r\n\r\n        validate (values) {\r\n\r\n            let errors = {}\r\n\r\n            if (!values.description) {\r\n\r\n                errors.description = \"Enter a Description\"\r\n            } else if ( values.description.length < 5){\r\n\r\n                errors.description = \"Enter at least 5 Characters in Description\"\r\n            }\r\n\r\n            return errors\r\n        }\r\n\r\n     \r\n\r\n    render(){\r\n        let id = this.state.id\r\n        let description = this.state.description\r\n        let username = this.state.username\r\n       \r\n        return (\r\n\r\n\r\n           \r\n            <div>\r\n                <h3>Course</h3>\r\n                <div className = \"container\">\r\n                \r\n                    <Formik enableReinitialize={true} \r\n                       initialValues = { {id, description, username} }\r\n                       onSubmit={this.onSubmit}\r\n                       validateOnBlur={false}\r\n                       validateOnChange={false}\r\n                       validate= {this.validate}>\r\n                        {\r\n\r\n                            (props) => (\r\n\r\n                                <Form>\r\n                                    <fieldset className =\"form-group\" >\r\n\r\n                                        <label>Id</label>\r\n                                        <Field className =\"form-control\" type=\"text\" name=\"id\" disabled />\r\n\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className =\"form-group\">\r\n\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\r\n                                        <ErrorMessage name = \"description\" component = \"div\" className=\"alert alert-warning\"/>\r\n                                        \r\n\r\n\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className =\"form-group\">\r\n\r\n                                        <label>Username</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"username\"\r\n                                         />\r\n                                        <ErrorMessage name = \"username\" component = \"div\" className=\"alert alert-warning\"/>\r\n                                        \r\n\r\n\r\n                                    </fieldset>\r\n                                    \r\n\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n\r\n\r\n\r\n                                </Form>\r\n\r\n\r\n                            )\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Formik>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseComponent;\r\n","import React from 'react'\r\nimport ListCourseComponent from './ListCourseComponent';\r\nimport { Switch,BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport CourseComponent from './CourseComponent';\r\n\r\n\r\n\r\nclass InstructorApp extends React.Component {\r\n\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Router>\r\n            <> \r\n                <h1>Instructor Application</h1>\r\n                <Switch>\r\n                        <Route path=\"https://priceless-panini-9a249c.netlify.app\" exact component={ListCourseComponent} />\r\n                        <Route path=\"https://priceless-panini-9a249c.netlify.app/courses\" exact component={ListCourseComponent} />\r\n                        <Route path=\"https://priceless-panini-9a249c.netlify.app/courses/:id\" component={CourseComponent} />\r\n\r\n                </Switch>\r\n            </>\r\n            </Router>\r\n\r\n           \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default InstructorApp;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport InstructorApp from './Components/InstructorApp';\n\n\n\n\nclass App extends React.Component {\n\n\n  render(){\n\n      return (\n\n        <div className=\"container\">\n          <InstructorApp/>\n\n\n\n        </div>\n\n      );\n  }\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\n\nconst root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App/>, root);\n"],"sourceRoot":""}